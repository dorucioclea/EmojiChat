{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport { Component, selector } from \"../Component/Component\";\r\nlet RectangleItemComponent = class RectangleItemComponent extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.role = \"listitem\";\r\n    }\r\n    static markup() {\r\n        return `\n\t\t\t<slot></slot>\n\t\t`;\r\n    }\r\n    static styles() {\r\n        // language=CSS\r\n        return `\n\n        :host-context([center]),\n        :host([center]) {\n            align-self: center;\n            justify-self: center;\n        }\n\n        :host-context([round]),\n        :host([round]) {\n            border-radius: 50%;\n        }\n\n        :host {\n            user-select: none;\n            backface-visibility: hidden;\n            transform: translate3d(0, 0, 0);\n            box-sizing: border-box;\n            contain: content;\n            overflow: hidden;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            text-align: center;\n            flex-direction: row;\n            position: relative;\n            min-height: 46px;\n            min-width: 46px;\n            width: 200px;\n            height: 46px;\n            padding: 14px;\n            border-radius: var(--box-radius);\n            flex-shrink: 0;\n            transition: background var(--duration-medium) var(--easing-standard-curve);\n            color: var(--color-primary-100) !important;\n            font-size: var(--font-size-button) !important;\n            line-height: var(--font-size-button) !important;\n            font-weight: var(--font-weight-button) !important;\n        }\n\n        :host-context([large-text]),\n        :host([large-text]) {\n            font-size: var(--font-size-title) !important;\n        }\n\n        :host-context([keep-case]) ::slotted(*),\n        :host([keep-case]) ::slotted(*) {\n            text-transform: none;\n        }\n\n        ::slotted(*) {\n            color: inherit !important;\n            font-size: inherit !important;\n            line-height: inherit !important;\n            font-weight: inherit !important;\n            text-transform: uppercase;\n        }\n\n        ::slotted(icon-element) {\n            fill: var(--color-icon-dark);\n        }\n\n        :host(:not([no-background])[primary]) {\n            background: var(--color-primary-100);\n        }\n\n        :host([primary]) ::slotted(*) {\n            color: var(--color-primary-text-light) !important;\n        }\n\n        :host([primary]) ::slotted(icon-element) {\n            fill: var(--color-icon-light) !important;\n        }\n\n        :host(:not([no-background])[accent]) {\n            background: var(--color-accent-100);\n        }\n\n        :host([accent]) ::slotted(*) {\n            color: var(--color-primary-text-light) !important;\n        }\n\n        :host([accent]) ::slotted(icon-element) {\n            fill: var(--color-icon-light) !important;\n        }\n\n        :host(:not([no-background])[dark]) {\n            background: var(--color-black-70);\n        }\n\n        :host([dark]) ::slotted(*) {\n            color: var(--color-primary-text-light) !important;\n        }\n\n        :host([dark]) ::slotted(icon-element) {\n            fill: var(--color-icon-light) !important;\n        }\n\n        :host(:not([no-background])[light]) {\n            background: var(--color-white-100);\n        }\n\n        :host([light]) ::slotted(*) {\n            color: var(--color-primary-text-dark) !important;\n        }\n\n        :host([light]) ::slotted(icon-element) {\n            fill: var(--color-icon-dark) !important;\n        }\n\n        :host(:not([no-background])[warning]) {\n            background: var(--color-red-100);\n        }\n\n        :host([warning]) ::slotted(*) {\n            color: var(--color-primary-text-light) !important;\n        }\n\n        :host([warning]) ::slotted(icon-element) {\n            fill: var(--color-icon-light) !important;\n        }\n\n        :host(:not([no-background])[green]) {\n            background: var(--color-green-100);\n        }\n\n        :host([green]) ::slotted(*) {\n            color: var(--color-primary-text-light) !important;\n        }\n\n        :host([green]) ::slotted(icon-element) {\n            fill: var(--color-icon-light) !important;\n        }\n\n        :host([shadow]) {\n            box-shadow: var(--shadow-level1);\n        }\n\t\t`;\r\n    }\r\n};\r\nRectangleItemComponent = tslib_1.__decorate([\r\n    selector(\"rectangle-item-element\")\r\n], RectangleItemComponent);\r\nexport { RectangleItemComponent };\r\n//# sourceMappingURL=RectangleItemComponent.js.map",
  "map": {
    "version": 3,
    "file": "RectangleItemComponent.js",
    "sourceRoot": "",
    "sources": [
      "../../../../src/Component/RectangleItemComponent/RectangleItemComponent.ts"
    ],
    "names": [],
    "mappings": ";AAAA,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAC,MAAM,wBAAwB,CAAC;AAI3D,IAAa,sBAAsB,GAAnC,4BAAoC,SAAQ,SAAS;IADrD;;QAEQ,SAAI,GAAG,UAAU,CAAC;IAqJ1B,CAAC;IAnJO,MAAM,CAAC,MAAM;QACnB,MAAM,CAAC;;GAEN,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,MAAM;QACnB,eAAe;QACf,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyIN,CAAC;IACH,CAAC;CACD,CAAA;AAtJY,sBAAsB;IADlC,QAAQ,CAAC,wBAAwB,CAAC;GACtB,sBAAsB,CAsJlC;SAtJY,sBAAsB"
  }
}
