{
  "code": "import { GlobalObject } from \"@wessberg/globalobject\";\r\nexport class RouteHistory {\r\n    constructor(routeHistoryListener) {\r\n        this.routeHistoryListener = routeHistoryListener;\r\n        this.uid = 0;\r\n        this.uidMap = new Map();\r\n        this.dataMap = new Map();\r\n        this.listenForPopstate();\r\n    }\r\n    async forward() {\r\n        history.forward();\r\n        await this.routeHistoryListener.onNavigateTo(this.getRouteForUid(this.uid), this.getDataForUid(this.uid));\r\n    }\r\n    async back() {\r\n        history.back();\r\n        await this.routeHistoryListener.onNavigateTo(this.getRouteForUid(this.uid - 1), this.getDataForUid(this.uid - 1));\r\n    }\r\n    async addState(route, data = {}) {\r\n        this.uid++;\r\n        this.uidMap.set(this.uid, route);\r\n        this.dataMap.set(this.uid, data);\r\n        history.pushState(Object.assign({ uid: this.uid }, data), route.title, route.path);\r\n        await this.forward();\r\n    }\r\n    getRouteForUid(uid = this.uid) {\r\n        const route = this.uidMap.get(uid);\r\n        if (route == null)\r\n            throw new ReferenceError(`${this.constructor.name} could not get a route for uid: ${uid}`);\r\n        return route;\r\n    }\r\n    getDataForUid(uid = this.uid) {\r\n        return this.dataMap.get(uid);\r\n    }\r\n    async onStateChanged({ uid }) {\r\n        this.uid = uid;\r\n        await this.routeHistoryListener.onNavigateTo(this.getRouteForUid(uid), this.getDataForUid(uid));\r\n    }\r\n    listenForPopstate() {\r\n        GlobalObject.addEventListener(RouteHistory.POPSTATE_EVENT_NAME, async (e) => {\r\n            await this.onStateChanged(e.state == null ? { uid: Math.max(0, this.uid - 1) } : e.state);\r\n        });\r\n    }\r\n}\r\nRouteHistory.POPSTATE_EVENT_NAME = \"popstate\";\r\n//# sourceMappingURL=RouteHistory.js.map",
  "map": {
    "version": 3,
    "file": "RouteHistory.js",
    "sourceRoot": "",
    "sources": [
      "../../../../src/Service/NavigationUtil/RouteHistory.ts"
    ],
    "names": [],
    "mappings": "AAEA,OAAO,EAAC,YAAY,EAAC,MAAM,wBAAwB,CAAC;AAEpD,MAAM;IAML,YAAqB,oBAA2C;QAA3C,yBAAoB,GAApB,oBAAoB,CAAuB;QAJxD,QAAG,GAAW,CAAC,CAAC;QAChB,WAAM,GAAqB,IAAI,GAAG,EAAE,CAAC;QACrC,YAAO,GAA8B,IAAI,GAAG,EAAE,CAAC;QAGtD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEM,KAAK,CAAC,OAAO;QACnB,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,MAAM,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3G,CAAC;IAEM,KAAK,CAAC,IAAI;QAChB,OAAO,CAAC,IAAI,EAAE,CAAC;QACf,MAAM,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACnH,CAAC;IAEM,KAAK,CAAC,QAAQ,CAAE,KAAa,EAAE,OAAwB,EAAE;QAC/D,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACjC,OAAO,CAAC,SAAS,iBAAE,GAAG,EAAE,IAAI,CAAC,GAAG,IAAK,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QAErE,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAEO,cAAc,CAAE,MAAW,IAAI,CAAC,GAAG;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC;YAAC,MAAM,IAAI,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,mCAAmC,GAAG,EAAE,CAAC,CAAC;QAC9G,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAEO,aAAa,CAAE,MAAW,IAAI,CAAC,GAAG;QACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEO,KAAK,CAAC,cAAc,CAAE,EAAC,GAAG,EAAS;QAC1C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,MAAM,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;IACjG,CAAC;IAEO,iBAAiB;QACxB,YAAY,CAAC,gBAAgB,CAAC,YAAY,CAAC,mBAAmB,EAAE,KAAK,EAAC,CAAC;YACtE,MAAM,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,GAAG,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACJ,CAAC;;AAhDuB,gCAAmB,GAAG,UAAU,CAAC"
  }
}
