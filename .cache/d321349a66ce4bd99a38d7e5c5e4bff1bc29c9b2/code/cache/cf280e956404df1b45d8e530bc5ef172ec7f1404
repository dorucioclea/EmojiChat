{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport { Component, selector } from \"../Component/Component\";\r\nimport { svgIconUtil } from \"../../Service/Services\";\r\nlet IconComponent = class IconComponent extends Component {\r\n    static get observedAttributes() {\r\n        return [\"icon\"];\r\n    }\r\n    static styles() {\r\n        // language=CSS\r\n        return `\n        :host-context([center]),\n        :host([center]) {\n            margin: 0 auto;\n        }\n\n        #fill_target,\n        :host {\n            fill: var(--color-icon-dark);\n        }\n\n        :host([light]) #fill_target,\n        :host([light]) {\n            fill: var(--color-icon-light);\n        }\n\n        :host([dark]) #fill_target,\n        :host([dark]) {\n            fill: var(--color-icon-dark);\n        }\n\n        :host([primary]) #fill_target,\n        :host([primary]) {\n            fill: var(--color-primary-100);\n        }\n\n        :host([accent]) #fill_target,\n        :host([accent]) {\n            fill: var(--color-accent-100);\n        }\n\n        :host([warning]) #fill_target,\n        :host([red]) #fill_target,\n        :host([warning]),\n\t\t\t\t:host([red]) {\n            fill: var(--color-red-100);\n        }\n\t\t\t\t\n        :host([blue]) #fill_target,\n        :host([blue]) {\n            fill: var(--color-blue-100);\n        }\n\n        :host([orange]) #fill_target,\n        :host([orange]) {\n            fill: var(--color-orange-100);\n        }\n\n        :host {\n            user-select: none;\n            backface-visibility: hidden;\n            transform: translate3d(0, 0, 0);\n            position: relative;\n            vertical-align: middle;\n            width: var(--width-icon-small);\n            height: var(--height-icon-small);\n            pointer-events: none;\n            contain: size layout style;\n            overflow: hidden;\n            flex-shrink: 0;\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        :host([small]) {\n            width: var(--width-icon-small);\n            height: var(--height-icon-small);\n        }\n\n        :host([medium]) {\n            width: var(--width-icon-medium);\n            height: var(--height-icon-medium);\n        }\n\n        :host([large]) {\n            width: var(--width-icon-large);\n            height: var(--height-icon-large);\n        }\n\n        :host([larger]) {\n            width: var(--width-icon-larger);\n            height: var(--height-icon-larger);\n        }\n\n        :host([huge]) {\n            width: var(--width-icon-huge);\n            height: var(--height-icon-huge);\n        }\n\n        :host([extreme]) {\n            width: var(--width-icon-extreme);\n            height: var(--height-icon-extreme);\n        }\n\n        :host([brutal]) {\n            width: var(--width-icon-brutal);\n            height: var(--height-icon-brutal);\n        }\n\n\t\t`;\r\n    }\r\n    attributeChangedCallback(attrName, _, newVal) {\r\n        switch (attrName) {\r\n            case \"icon\":\r\n                if (newVal != null) {\r\n                    this.clearSvg();\r\n                    const svg = svgIconUtil.buildIconFromName(newVal);\r\n                    if (svg == null)\r\n                        throw ReferenceError(`Failed to build an SVG for icon: ${newVal}`);\r\n                    this.svg = svg;\r\n                    this.setSvg(svg);\r\n                }\r\n                else {\r\n                    this.svg = null;\r\n                    this.clearSvg();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    setSvg(svg) {\r\n        if (this.shadowRoot != null)\r\n            this.shadowRoot.appendChild(svg);\r\n        else\r\n            this.appendChild(svg);\r\n    }\r\n    clearSvg() {\r\n        const elem = this.shadowRoot != null ? this.shadowRoot : this;\r\n        const svg = elem.querySelector(\"svg\");\r\n        if (svg == null)\r\n            return;\r\n        elem.removeChild(svg);\r\n    }\r\n};\r\nIconComponent = tslib_1.__decorate([\r\n    selector(\"icon-element\")\r\n], IconComponent);\r\nexport { IconComponent };\r\n//# sourceMappingURL=IconComponent.js.map",
  "map": {
    "version": 3,
    "file": "IconComponent.js",
    "sourceRoot": "",
    "sources": [
      "../../../../src/Component/IconComponent/IconComponent.ts"
    ],
    "names": [],
    "mappings": ";AAAA,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAC,MAAM,wBAAwB,CAAC;AAG3D,OAAO,EAAC,WAAW,EAAC,MAAM,wBAAwB,CAAC;AAGnD,IAAa,aAAa,GAA1B,mBAA2B,SAAQ,SAAS;IAI3C,MAAM,KAAK,kBAAkB;QAC5B,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,MAAM;QACnB,eAAe;QACf,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoGN,CAAC;IACH,CAAC;IAES,wBAAwB,CAAE,QAAgB,EAAE,CAAS,EAAE,MAAc;QAC9E,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAElB,KAAK,MAAM;gBACV,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,MAAM,GAAG,GAAG,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBAClD,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC;wBAAC,MAAM,cAAc,CAAC,oCAAoC,MAAM,EAAE,CAAC,CAAC;oBACpF,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;oBACf,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAClB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;oBAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACjB,CAAC;gBACD,KAAK,CAAC;QACR,CAAC;IACF,CAAC;IAEO,MAAM,CAAE,GAAe;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC;YAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC9D,IAAI;YAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEO,QAAQ;QACf,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC9D,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACtC,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC;YAAC,MAAM,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;CAED,CAAA;AA/IY,aAAa;IADzB,QAAQ,CAAC,cAAc,CAAC;GACZ,aAAa,CA+IzB;SA/IY,aAAa"
  }
}
